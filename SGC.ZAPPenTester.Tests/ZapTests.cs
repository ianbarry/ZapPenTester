using FakeItEasy;

using Microsoft.VisualStudio.TestTools.UnitTesting;

using ZAPPenTester.Interfaces;

namespace ZAPPenTester.Tests
{
    [TestClass]
    public class ZapTests
    {
        [TestMethod]
        public void Scan_WhenCalled_CallsSpiderStart()
        {
/*            var spider = A.Fake<ISpider>();
            var zap = new Zap(A.Fake<ISettings>(), A.Fake<ILogger>(), A.Fake<IScanner>(), A.Fake<IReporting>(), spider);

            zap.Scan();
            
            A.CallTo(() => spider.Start(new[] { "http://localhost/" })).MustHaveHappened();*/
        }

        [TestMethod]
        public void Scan_WhenCalledAndSpiderDidNotStart_DoesNotCallSpiderHasCompleted()
        {
/*            var spider = A.Fake<ISpider>();
            var scanner = A.Fake<IScanner>();
            var zap = new Zap(A.Fake<ISettings>(), A.Fake<ILogger>(), scanner, A.Fake<IReporting>(), spider)
            {
                sleepTimeBetweenRequests = 0
            };

            A.CallTo(() => spider.HasCompleted()).Returns(false);

            zap.Scan("http://www.somefakeurl.com");

            A.CallTo(() => spider.HasCompleted()).MustNotHaveHappened();*/
        }

        [TestMethod]
        public void Scan_WhenCalledAndSpiderDidNotStart_DoesNotCallScannerScan()
        {
/*            var spider = A.Fake<ISpider>();
            var scanner = A.Fake<IScanner>();
            var zap = new Zap(A.Fake<ISettings>(), A.Fake<ILogger>(), scanner, A.Fake<IReporting>(), spider)
                      {
                          sleepTimeBetweenRequests = 0
                      };
            
            A.CallTo(() => spider.HasCompleted()).Returns(false);

            zap.Scan("http://www.somefakeurl.com");

            A.CallTo(() => scanner.Scan(A<string>.Ignored)).MustNotHaveHappened();*/
        }

        [TestMethod]
        public void Scan_WhenCalledAndSpiderStarted_CallsSpiderHasCompleted()
        {
/*            var spider = A.Fake<ISpider>();
            var scanner = A.Fake<IScanner>();
            var zap = new Zap(A.Fake<ISettings>(), A.Fake<ILogger>(), scanner, A.Fake<IReporting>(), spider)
            {
                sleepTimeBetweenRequests = 0
            };

            A.CallTo(() => spider.Start(A<string>.Ignored)).Returns(true);
            A.CallTo(() => spider.HasCompleted()).Returns(true);

            zap.Scan("http://www.somefakeurl.com");

            A.CallTo(() => spider.HasCompleted()).MustHaveHappened();*/
        }

        [TestMethod]
        public void Scan_WhenCalledAndSpiderHasCompleted_CallsScannerScan()
        {
/*            var spider = A.Fake<ISpider>();
            var scanner = A.Fake<IScanner>();
            var zap = new Zap(A.Fake<ISettings>(), A.Fake<ILogger>(), scanner, A.Fake<IReporting>(), spider)
            {
                sleepTimeBetweenRequests = 0
            };

            A.CallTo(() => spider.Start(A<string>.Ignored)).Returns(true);
            A.CallTo(() => spider.HasCompleted()).Returns(true);

            zap.Scan("http://www.somefakeurl.com");

            A.CallTo(() => scanner.Scan("http://www.somefakeurl.com")).MustHaveHappened();*/
        }

        [TestMethod]
        public void Scan_WhenCalledScannerHasStarted_CallsScannerHasCompleted()
        {
/*            var spider = A.Fake<ISpider>();
            var scanner = A.Fake<IScanner>();
            var zap = new Zap(A.Fake<ISettings>(), A.Fake<ILogger>(), scanner, A.Fake<IReporting>(), spider)
            {
                sleepTimeBetweenRequests = 0
            };

            A.CallTo(() => spider.Start(A<string>.Ignored)).Returns(true);
            A.CallTo(() => spider.HasCompleted()).Returns(true);
            A.CallTo(() => scanner.Scan(A<string>.Ignored)).Returns(true);
            A.CallTo(() => scanner.HasCompleted()).Returns(true);

            zap.Scan("http://www.somefakeurl.com");

            A.CallTo(() => scanner.HasCompleted()).MustHaveHappened();*/
        }

        [TestMethod]
        public void GetReport_WhenCalled_CallsReportingComponentGetReport()
        {
/*            var reporting = A.Fake<IReporting>();
            var zap = new Zap(A.Fake<ISettings>(), A.Fake<ILogger>(), A.Fake<IScanner>(), reporting, A.Fake<ISpider>());

            zap.GetReports("http://www.somefakeurl.com");

            A.CallTo(() => reporting.GetReports("http://www.somefakeurl.com")).MustHaveHappened();*/
        }
    }
}